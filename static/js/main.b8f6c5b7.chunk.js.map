{"version":3,"sources":["components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","components/App/App.js","index.js","components/TodoList/TodoList.module.css","components/App/App.module.css","components/TodoForm/TodoForm.module.css"],"names":["TodoList","title","id","isDone","isEdit","doneTask","deleteTask","taskDown","taskUp","idx","useState","edit","setEdit","changedTitle","setChangedTitle","style","clx","s","form","done","className","value","todolist","onChange","e","target","editButton","onClick","EditOutlined","CheckCircleOutlined","DeleteOutlined","ArrowUpOutlined","ArrowDownOutlined","TodoForm","addNewTask","setValue","handleSubmit","preventDefault","onSubmitCapture","placeholder","input","addButton","PlusCircleOutlined","App","initialState","uuid","list","setList","handleDoneTask","findIndex","el","newList","handleDeleteTask","slice","newTask","splice","todoListJSX","map","i","key","app","todo","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b8f6c5b7.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Form, Input} from \"antd\";\nimport {EditOutlined, CheckCircleOutlined, DeleteOutlined, ArrowUpOutlined, ArrowDownOutlined} from '@ant-design/icons';\nimport clx from 'classnames';\n\nimport s from './TodoList.module.css';\n\nexport const TodoList = (\n    {title, id, isDone, isEdit, doneTask, deleteTask, taskDown, taskUp, idx}) => {\n\n    const [edit, setEdit] = useState(isEdit);\n    const [changedTitle, setChangedTitle] = useState(title);\n\n    const onEdit = () =>{\n        setChangedTitle(edit ? 'write new task...' : changedTitle);\n        setEdit(!edit);\n    };\n\n    const inputHandled = (e) => setChangedTitle(e.target.value);\n\n    const style = clx({\n        [s.form]: true,\n        [s.done]: isDone\n    });\n\n    return (\n        <Form className={style}>\n            <Input value={changedTitle}\n                   className={s.todolist}\n                   onChange={inputHandled}\n            />\n            <Button className={s.editButton}\n                    onClick={onEdit}\n            >\n                <EditOutlined/>\n            </Button>\n            <Button className={s.editButton} onClick={() => doneTask(id)}>\n                <CheckCircleOutlined/>\n            </Button>\n            <Button className={s.editButton} onClick={() => deleteTask(id)}>\n                <DeleteOutlined/>\n            </Button>\n            <Button className={s.editButton} onClick={()=>taskUp(idx)}>\n                <ArrowUpOutlined />\n            </Button>\n            <Button className={s.editButton} onClick={()=>taskDown(idx)}>\n                <ArrowDownOutlined />\n            </Button>\n        </Form>\n    )\n\n};\n","import React, {useState} from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { PlusCircleOutlined } from '@ant-design/icons';\n\nimport s from './TodoForm.module.css';\n\nexport const TodoForm = ({addNewTask}) => {\n    const [value, setValue] = useState('');\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        if(!value) return;\n        addNewTask(value);\n        setValue('');\n    }\n    return (\n            <Form onSubmitCapture={handleSubmit}>\n                <Input placeholder='Add new task...'\n                       className={s.input}\n                       value={value}\n                       onChange={e => setValue(e.target.value)}\n\n                />\n                <Button className={s.addButton} onClick={handleSubmit}>\n                    <PlusCircleOutlined />\n                </Button>\n            </Form>\n    );\n};\n","import React, {useState} from 'react';\nimport {TodoList} from '../TodoList/TodoList';\nimport { v4 as uuid } from 'uuid';\n\nimport s from  './App.module.css';\nimport {TodoForm} from \"../TodoForm/TodoForm\";\n\nexport const App = () => {\n\n    const initialState = [\n        {\n            title: 'Watch the last lesson\\'s record',\n            isDone: false,\n            isEdit: false,\n            id: uuid()\n        }, {\n            title: 'Make homework',\n            isDone: false,\n            isEdit: false,\n            id: uuid()\n        }, {\n            title: 'Read the documentation',\n            isDone: false,\n            isEdit: false,\n            id: uuid()\n        }\n    ];\n    const [list, setList] = useState(initialState);\n\n\n    const handleAddNewTask = value => {\n        const newList =[...list, {\n            title: value,\n            isDone: false,\n            id: uuid()\n        }];\n        setList(newList);\n    }\n\n    const handleDoneTask = id => {\n        const idx = list.findIndex( el => el.id === id);\n        const newList =[...list];\n        newList[idx].isDone = !newList[idx].isDone;\n        setList(newList);\n    }\n\n    const handleDeleteTask = id => {\n        const idx = list.findIndex( el => el.id === id);\n        const newList =[\n            ...list.slice(0,idx),\n            ...list.slice(idx+1)\n        ];\n        setList(newList);\n    }\n\n    const taskDown = (idx) => {\n        const newTask = [...list];\n        newTask.splice(idx + 1, 0, newTask.splice(idx, 1)[0]);\n        setList(newTask);\n    }\n\n    const taskUp = (idx) => {\n        if(idx !== 0) {\n            const newTask = [...list];\n            newTask.splice(idx - 1, 0, newTask.splice(idx, 1)[0]);\n            setList(newTask);\n        }\n    }\n\n    const todoListJSX = list.map((el, i)=>(\n        <TodoList key={el.id}\n                  id={el.id}\n                  idx={i}\n                  isDone={el.isDone}\n                  isEdit={el.isEdit}\n                  title={el.title}\n                  doneTask={handleDoneTask}\n                  deleteTask={handleDeleteTask}\n                  taskDown={taskDown}\n                  taskUp={taskUp}\n        />\n    ));\n\n  return (\n    <div className={s.app}>\n        <div className={s.todo}>\n            <h1 className={s.title}>MY TO-DO LIST</h1>\n            {todoListJSX}\n            <TodoForm addNewTask={handleAddNewTask}/>\n        </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\n\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />\n  //</React.StrictMode>\n ,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TodoList_form__2nmVc\",\"todolist\":\"TodoList_todolist__ODtSB\",\"editButton\":\"TodoList_editButton__3cdiC\",\"done\":\"TodoList_done__2kQEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\",\"todo\":\"App_todo__KQbdn\",\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TodoForm_input__1VKmG\",\"addButton\":\"TodoForm_addButton__2Gj4_\"};"],"sourceRoot":""}